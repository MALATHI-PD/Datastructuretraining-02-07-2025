package datastructure;
class Cqueue{
	int f=-1;
	int r=-1;
	int a[]=new int[4];
	public void enqueue(int data) {
		if(f==(r+1)%a.length) {
			System.out.println("Queue is Full");
		}
		else if(r==-1 && f==-1) {
			r=0;
			f=0;
			a[r]=data;
			System.out.println("Inserted Element: "+a[r]);
		}
		else {
			r=(r+1)%a.length;
			a[r]=data;
			System.out.println("Inserted Element: "+a[r]);
		}
		
	}
	public void dequeue() {
		if(r==-1 && f==-1) {
			System.out.println("Queue is Empty");
		}
		else if(r==f) {
			System.out.println("Deleted Element:"+a[f]);
			f=-1;
			r=-1;
		}
		else {
			System.out.println("Deleted Element:"+a[f]);
			f=(f+1)%a.length;
		}
	}
	public void display() {
		int temp=f;
		System.out.println("Display Elements");
		while(temp!=r) {
			System.out.println(a[temp]);
			temp=(temp+1)%a.length;
		}System.out.println(a[r]);
	}
	public void peek() {
		System.out.println("Peek Element: "+a[f]);
	}
}

public class Circular_Queue {
	public static void main(String args[])
	{
	Cqueue m=new Cqueue();
	m.enqueue(10);
	m.enqueue(20);
	m.enqueue(30);
	m.enqueue(40);
	m.enqueue(50);
	m.peek();
	m.dequeue();
	m.dequeue();
	m.enqueue(50);
	m.enqueue(70);
	m.display();
	m.peek();
	}

}

